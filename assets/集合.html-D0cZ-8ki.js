import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,f as o,o as n}from"./app-BTyWkCNt.js";const i="/Java-Interview/assets/java_collection-DghCVwKF.jpg",l={};function s(h,e){return n(),t("div",null,e[0]||(e[0]=[o('<h2 id="collection" tabindex="-1"><a class="header-anchor" href="#collection"><span>Collection</span></a></h2><p>Java 集合主要是由两大接口派生而来：一个是 Collection接口，主要用于存放单一元素；另一个是 Map 接口，主要用于存放键值对。对于Collection 接口，下面又有三个主要的子接口：List、Set 、 Queue。Java 集合框架如下图所示： <img src="'+i+'" alt="" loading="lazy"></p><h2 id="hashmap" tabindex="-1"><a class="header-anchor" href="#hashmap"><span>HashMap</span></a></h2><h3 id="hashmap的底层实现" tabindex="-1"><a class="header-anchor" href="#hashmap的底层实现"><span>HashMap的底层实现</span></a></h3><p>DK1.8 之前 HashMap 底层是 数组和链表 结合在一起使用也就是 链表散列。HashMap 通过 key 的 hashcode 经过扰动函数处理过后得到 hash 值，然后通过 (n - 1) &amp; hash 判断当前元素存放的位置（这里的 n 指的是数组的长度），如果当前位置存在元素的话，就判断该元素与要存入的元素的 hash 值以及 key 是否相同，如果相同的话，直接覆盖，不相同就通过拉链法解决冲突。所谓扰动函数指的就是 HashMap 的 hash 方法。使用 hash 方法也就是扰动函数是为了防止一些实现比较差的 hashCode() 方法 换句话说使用扰动函数之后可以减少碰撞。</p>',5)]))}const c=a(l,[["render",s],["__file","集合.html.vue"]]),m=JSON.parse('{"path":"/interview/java/%E9%9B%86%E5%90%88.html","title":"集合","lang":"zh-CN","frontmatter":{"title":"集合","description":"Collection Java 集合主要是由两大接口派生而来：一个是 Collection接口，主要用于存放单一元素；另一个是 Map 接口，主要用于存放键值对。对于Collection 接口，下面又有三个主要的子接口：List、Set 、 Queue。Java 集合框架如下图所示： HashMap HashMap的底层实现 DK1.8 之前 Hash...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/Java-Interview/interview/java/%E9%9B%86%E5%90%88.html"}],["meta",{"property":"og:site_name","content":"Java面经"}],["meta",{"property":"og:title","content":"集合"}],["meta",{"property":"og:description","content":"Collection Java 集合主要是由两大接口派生而来：一个是 Collection接口，主要用于存放单一元素；另一个是 Map 接口，主要用于存放键值对。对于Collection 接口，下面又有三个主要的子接口：List、Set 、 Queue。Java 集合框架如下图所示： HashMap HashMap的底层实现 DK1.8 之前 Hash..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-09-20T15:21:54.000Z"}],["meta",{"property":"article:author","content":"Saul"}],["meta",{"property":"article:modified_time","content":"2024-09-20T15:21:54.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"集合\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-09-20T15:21:54.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Saul\\",\\"url\\":\\"https://zhsong.cn\\"}]}"]]},"headers":[{"level":2,"title":"Collection","slug":"collection","link":"#collection","children":[]},{"level":2,"title":"HashMap","slug":"hashmap","link":"#hashmap","children":[{"level":3,"title":"HashMap的底层实现","slug":"hashmap的底层实现","link":"#hashmap的底层实现","children":[]}]}],"git":{"createdTime":1726845714000,"updatedTime":1726845714000,"contributors":[{"name":"zhangSong","email":"1358995237@qq.com","commits":1}]},"readingTime":{"minutes":0.95,"words":284},"filePathRelative":"interview/java/集合.md","localizedDate":"2024年9月20日","autoDesc":true}');export{c as comp,m as data};
